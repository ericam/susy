// Padding Syntax
// ==============

// Prefix
// ------
// Add spanning-padding before an element.
// - $span  : <span>
@mixin prefix(
  $span
) {
  $span   : if(index($span, outer), $span, append($span, outer));
  $flow   : get-span-setting(flow, $span, parse);
  $width  : span($span);

  @include padding-output($width, null, $flow);
}

// Suffix
// ------
// Add spanning-padding after an element.
// - $span  : <span>
@mixin suffix(
  $span
) {
  $span   : if(index($span, outer), $span, append($span, outer));
  $flow   : get-span-setting(flow, $span, parse);
  $width  : span($span);

  @include padding-output(null, $width, $flow);
}

// Pad
// ---
// Add spanning-padding before and after an element.
// - $pre     : <span>
// - [$post]  : <span>
@mixin pad(
  $pre,
  $post: $pre
) {
  $pre        : if(index($pre, outer), $pre, append($pre, outer));
  $post       : if(index($post, outer), $post, append($post, outer));

  $get-pre    : parse-span($pre);
  $get-post   : parse-span($post);

  $flow       : get-span-setting(flow, $get-pre);
  $before     : null;
  $after      : null;

  // get the various contexts
  $default-context  : $columns $gutters;
  $pre-context      : get-span-setting(columns, $get-pre) get-span-setting(gutters, $get-pre);
  $post-context     : get-span-setting(columns, $get-post) get-span-setting(gutters, $get-post);

  // if the contexts don't line up, and only the post has changed, we use it for both
  @if $pre-context != $post-context and $default-context == $pre-context {
    @include use-grid($post-context) {
      $before: span($pre);
      $after: span($post);
    }
  } @else {
    $before: span($pre);
    $after: span($post);
  }

  @include padding-output($before, $after, $flow);
}
