// Background Grids
// ================

@include test-module('Grid Background Syntax') {

  // Grid Background
  // ---------------

  @include output-test('background-grid') {
    $col: rgba(102, 102, 255, 0.25);
    $light: rgba(179, 179, 255, 0.25);

    @include assert-setup {
      .test, .expect {
        @include rhythm-padding(1);
        background: none;
      }
    }
    @include assert-output(
      'Background-grid should show 7 columns with .5 gutters'
    ) {
      .test { @include background-grid(7 .5); }
      .expect {
        background: linear-gradient(to right, $col, $light 10%, transparent 10%, transparent 15%, $col 15%, $light 25%, transparent 25%, transparent 30%, $col 30%, $light 40%, transparent 40%, transparent 45%, $col 45%, $light 55.0%, transparent 55.0%, transparent 60%, $col 60%, $light 70%, transparent 70%, transparent 75%, $col 75%, $light 85%, transparent 85%, transparent 90%, $col 90%, $light);
      }
    }
  }

  // Grid Overlay
  // ------------

  @include output-test('overlay-grid') {
    $asym: (1 2 3 2 1) (4em 1em) static;

    // There is no visible output from this test.
    // Compare the tested/expected css output for results.
    // Check the AG test to make sure it is functioning.
    @include assert-setup;
    @include assert-output(
      '.test and .expect should have same output.'
    ) {
      .test { @include overlay-grid('.sym' (7 .5), '.asym' $asym); }
      .expect {
        head {
          border-radius: 0.25em;
          display: block;
          position: fixed;
          bottom: 10px;
          left: 10px;
          z-index: 999;
          color: #333;
          text-shadow: 0 0 3px #fff;
          &::before {
            content: "|||";
            display: block;
            padding: 10px 14px;
            letter-spacing: -1;
            font-family: sans-serif;
            font-size: 26px;
            font-weight: bold;
          }
          &:hover {
            box-shadow: 0 0 3px rgba(51, 51, 51, 0.5);
            background: rgba(255, 255, 255, 0.5);
            ~ .sym,
            ~ body .sym {
              position: relative;
              &::before {
                @extend %grid-overlay-base;
                @include background-grid(7 .5);
              }
            }
            ~ .asym,
            ~ body .asym {
              position: relative;
              &::before {
                @extend %grid-overlay-base;
                @include background-grid((1 2 3 2 1) (4em 1em) static);
              }
            }
          }
        }
      }
    }
  }

  // Get Grid Color-Stops
  // --------------------

  $color  : $grid-color;
  $trans  : transparent;
  $light  : lighten($color, 15%);

  @include test('[function] get-grid-color-stops') {

    // static
    $grid: 4 (4em 1em) static;
    $parse: parse-grid($grid);
    $stops: get-grid-color-stops($parse);
    $expect: $color, $light 4em, transparent 4em, transparent 5em, $color 5em, $light 9em, transparent 9em, transparent 10em, $color 10em, $light 14em, transparent 14em, transparent 15em, $color 15em, $light;
    @include assert-equal($stops, $expect,
      'Stops for "#{$grid}" should be "#{$expect}"');

    // static inside
    $grid: 4 (4em 1em) static inside;
    $parse: parse-grid($grid);
    $stops: get-grid-color-stops($parse);
    $expect: $color, $light 5em, $color 5em, $light 10em, $color 10em, $light 15em, $color 15em, $light;
    @include assert-equal($stops, $expect,
      'Stops for "#{$grid}" should be "#{$expect}"');

    // fluid
    $grid: (1 2 3 2 1) .25 fluid;
    $parse: parse-grid($grid);
    $stops: get-grid-color-stops($parse);
    $expect: $color, $light 10%, transparent 10%, transparent 12.5%, $color 12.5%, $light 32.5%, transparent 32.5%, transparent 35%, $color 35%, $light 65%, transparent 65%, transparent 67.5%, $color 67.5%, $light 87.5%, transparent 87.5%, transparent 90%, $color 90%, $light;
    @include assert-equal($stops, $expect,
      'Stops for "#{$grid}" should be "#{$expect}"');

    // fluid inside
    $grid: 7 .5 fluid inside;
    $parse: parse-grid($grid);
    $stops: get-grid-color-stops($parse);
    $expect: $color, $light 15%, $color 15%, $light 30%, $color 30%, $light 45%, $color 45%, $light 60%, $color 60%, $light 75%, $color 75%, $light 90%, $color 90%, $light;
    @include assert-equal($stops, $expect,
      'Stops for "#{$grid}" should be "#{$expect}"');

    // fluid inside-static
    $grid: 7 .5 fluid inside-static;
    $parse: parse-grid($grid);
    $stops: get-grid-color-stops($parse);
    $expect: $color, $light 15%, $color 15%, $light 30%, $color 30%, $light 45%, $color 45%, $light 60%, $color 60%, $light 75%, $color 75%, $light 90%, $color 90%, $light;
    @include assert-equal($stops, $expect,
      'Stops for "#{$grid}" should be "#{$expect}"');
  }

}
